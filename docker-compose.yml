services:
  rabbitmq:
    image: rabbitmq:4-management-alpine
    container_name: "rabbitmq"
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
      - rabbitmq_logs:/var/log/rabbitmq/
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
  mysql:
    image: mysql:latest
    container_name: "mysql"
    restart: always
    networks:
      - microservices-network
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    volumes:
      - mysql_data:/var/lib/mysql
      - mysql_config:/etc/mysql/conf.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: "phpmyadmin"
    restart: unless-stopped
    depends_on:
      - mysql
    networks:
      - microservices-network
    ports:
      - "8081:80"
    environment:
      - PMA_HOST=mysql
      - PMA_PORT=3306
      - PMA_ARBITRARY=1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081"]
      interval: 30s
      timeout: 10s
      retries: 3
  loki:
    image: grafana/loki:latest
    container_name: "loki"
    restart: unless-stopped
    ports:
      - "3100:3100"
    command:
      - -config.file=/etc/loki/local-config.yaml
      - -pattern-ingester.enabled=true
    volumes:
      - loki_config:/etc/loki
      - loki_data:/data/loki
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3100/ready"]
      interval: 30s
      timeout: 10s
      retries: 3
  promtail:
    image: grafana/promtail:latest
    container_name: "promtail"
    restart: unless-stopped
    volumes:
      - promtail_logs:/var/log
      - /var/log:/var/log:ro
    command: -config.file=/etc/promtail/config.yml
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9080/ready"]
      interval: 30s
      timeout: 10s
      retries: 3
  grafana:
    image: grafana/grafana:latest
    container_name: "grafana"
    restart: unless-stopped
    depends_on:
      - loki
      - promtail
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_AUTH_ANONYMOUS_ENABLED=false
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    ports:
      - "5601:3000"
    volumes:
      - grafana_config:/etc/grafana
      - grafana_data:/var/lib/grafana
    user: "472:472"
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
  redis:
    image: redis:latest
    container_name: redis
    restart: always
    volumes:
      - redis_data:/data
      - redis_logs:/var/log/redis
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PROTECTED_MODE=no
    ports:
      - "6379:6379"
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  microservices-network:
    driver: bridge

volumes:
  rabbitmq_data:
  rabbitmq_logs:
  mysql_data:
  mysql_config:
  loki_config:
  loki_data:
  promtail_logs:
  grafana_data:
  grafana_config:
  redis_data:
  redis_logs:
